package com.mycompany.arabella;
import java.util.*; 
public class NewClass{
    public static void main(String[] args)
    {
        //INITIALIZE ALL OF THE DRIVER OBJECTS HERE
        Map<Integer, Character> alpha = new HashMap<Integer, Character>();//Assigns the value 1 to 'a', 2 to 'b' and so on...
        Map<String, Integer> myMap = new HashMap<String, Integer>();//Assigns the value 1 to "aa", 2 to "ab' and so on...
        int [][]dp = {
                           {0, 242, 335, 553, 650, 712, 796, 702, 722, 752, 826, 984, 858, 774, 525, 402, 308, 317, 406, 397, 471, 413, 494, 537, 602, 665, 857, 791, 740, 633, 577, 529, 483, 493, 560, 629, },
{242, 0, 93, 311, 414, 514, 598, 537, 557, 587, 661, 821, 737, 653, 427, 239, 145, 75, 164, 234, 308, 250, 331, 374, 439, 502, 694, 628, 577, 468, 412, 364, 318, 251, 395, 464, },
{481, 239, 0, 222, 325, 425, 509, 448, 468, 498, 572, 732, 648, 564, 496, 308, 234, 164, 75, 145, 219, 297, 364, 285, 350, 413, 605, 539, 488, 379, 323, 275, 229, 162, 306, 375, },
{553, 311, 101, 0, 103, 203, 287, 335, 366, 396, 470, 690, 675, 591, 538, 350, 302, 236, 147, 213, 261, 339, 391, 312, 377, 440, 563, 497, 446, 277, 221, 173, 127, 60, 193, 262, },
{650, 414, 204, 103, 0, 100, 184, 232, 360, 390, 464, 684, 679, 596, 578, 390, 342, 339, 250, 253, 301, 379, 431, 352, 382, 445, 557, 491, 440, 275, 261, 213, 167, 163, 90, 159, },
{712, 514, 304, 203, 100, 0, 84, 156, 284, 314, 388, 608, 603, 520, 640, 452, 404, 439, 350, 315, 363, 441, 425, 346, 306, 369, 481, 415, 364, 199, 255, 275, 229, 263, 152, 83, },
{796, 598, 388, 287, 184, 84, 0, 240, 368, 398, 472, 692, 687, 604, 724, 536, 488, 523, 434, 399, 447, 525, 509, 430, 390, 453, 565, 499, 448, 283, 339, 359, 313, 347, 236, 167, },
{702, 537, 436, 335, 232, 156, 240, 0, 128, 158, 232, 452, 447, 434, 630, 442, 394, 462, 373, 305, 353, 431, 415, 336, 296, 283, 325, 259, 208, 189, 245, 265, 219, 286, 142, 73, },
{722, 557, 467, 366, 360, 284, 368, 128, 0, 30, 104, 324, 319, 306, 555, 370, 414, 482, 393, 325, 281, 359, 315, 236, 196, 155, 197, 131, 80, 89, 145, 193, 239, 306, 270, 201, },
{752, 587, 497, 396, 390, 314, 398, 158, 30, 0, 74, 294, 289, 276, 525, 400, 444, 512, 423, 355, 311, 389, 311, 253, 188, 125, 167, 101, 50, 119, 175, 223, 269, 336, 300, 231, },
{826, 661, 571, 470, 464, 388, 472, 232, 104, 74, 0, 285, 280, 350, 599, 474, 518, 586, 497, 429, 385, 463, 385, 327, 262, 199, 158, 92, 124, 193, 249, 297, 343, 410, 374, 305, },
{984, 821, 732, 690, 684, 608, 692, 452, 324, 294, 285, 0, 130, 214, 463, 597, 676, 746, 657, 587, 513, 586, 505, 447, 382, 319, 127, 193, 244, 413, 469, 517, 563, 630, 594, 525, },
{858, 738, 649, 676, 679, 603, 687, 447, 319, 289, 280, 130, 0, 84, 333, 514, 593, 663, 574, 504, 430, 503, 422, 364, 299, 236, 122, 188, 239, 406, 455, 503, 549, 616, 589, 520, },
{774, 654, 565, 592, 597, 521, 605, 435, 307, 277, 351, 214, 84, 0, 249, 430, 509, 579, 490, 420, 346, 419, 338, 280, 215, 152, 206, 272, 227, 322, 371, 419, 465, 532, 507, 438, },
{525, 427, 496, 538, 578, 640, 724, 630, 556, 526, 600, 463, 333, 249, 0, 188, 282, 352, 421, 351, 277, 199, 280, 343, 403, 401, 455, 521, 476, 469, 413, 365, 411, 478, 488, 557, },
{402, 239, 308, 350, 390, 452, 536, 442, 370, 400, 474, 597, 513, 429, 188, 0, 94, 164, 233, 163, 89, 11, 92, 155, 215, 278, 470, 404, 353, 281, 225, 177, 223, 290, 300, 369, },
{308, 145, 234, 302, 342, 404, 488, 394, 414, 444, 518, 676, 592, 508, 282, 94, 0, 70, 159, 89, 163, 105, 186, 229, 294, 357, 549, 483, 432, 325, 269, 221, 175, 242, 252, 321, },
{317, 75, 164, 236, 339, 439, 523, 462, 482, 512, 586, 746, 662, 578, 352, 164, 70, 0, 89, 159, 233, 175, 256, 299, 364, 427, 619, 553, 502, 393, 337, 289, 243, 176, 320, 389, },
{406, 164, 75, 147, 250, 350, 434, 373, 393, 423, 497, 657, 573, 489, 421, 233, 159, 89, 0, 70, 144, 222, 289, 210, 275, 338, 530, 464, 413, 304, 248, 200, 154, 87, 231, 300, },
{397, 234, 145, 213, 253, 315, 399, 305, 325, 355, 429, 587, 503, 419, 351, 163, 89, 159, 70, 0, 74, 152, 219, 140, 205, 268, 460, 394, 343, 236, 180, 132, 86, 153, 163, 232, },
{471, 308, 219, 261, 301, 363, 447, 353, 281, 311, 385, 513, 429, 345, 277, 89, 163, 233, 144, 74, 0, 78, 145, 66, 131, 194, 386, 320, 269, 192, 136, 88, 134, 201, 211, 280, },
{413, 250, 297, 339, 379, 441, 525, 431, 359, 389, 463, 586, 502, 418, 199, 11, 105, 175, 222, 152, 78, 0, 81, 144, 204, 267, 459, 393, 342, 270, 214, 166, 212, 279, 289, 358, },
{494, 331, 364, 391, 431, 425, 509, 415, 315, 311, 385, 505, 421, 337, 280, 92, 186, 256, 289, 219, 145, 81, 0, 79, 123, 186, 378, 312, 261, 226, 170, 218, 264, 331, 341, 342, },
{537, 374, 285, 312, 352, 346, 430, 336, 236, 253, 327, 447, 363, 279, 343, 155, 229, 299, 210, 140, 66, 144, 79, 0, 65, 128, 320, 254, 203, 147, 91, 139, 185, 252, 262, 263, },
{602, 439, 350, 377, 382, 306, 390, 296, 196, 188, 262, 382, 298, 214, 403, 215, 294, 364, 275, 205, 131, 204, 123, 65, 0, 63, 255, 189, 138, 107, 156, 204, 250, 317, 292, 223, },
{665, 502, 413, 440, 445, 369, 453, 283, 155, 125, 199, 319, 235, 151, 400, 278, 357, 427, 338, 268, 194, 267, 186, 128, 63, 0, 192, 126, 75, 170, 219, 267, 313, 380, 355, 286, },
{857, 694, 605, 563, 557, 481, 565, 325, 197, 167, 158, 127, 122, 206, 455, 470, 549, 619, 530, 460, 386, 459, 378, 320, 255, 192, 0, 66, 117, 286, 342, 390, 436, 503, 467, 398, },
{791, 628, 539, 497, 491, 415, 499, 259, 131, 101, 92, 193, 188, 272, 521, 404, 483, 553, 464, 394, 320, 393, 312, 254, 189, 126, 66, 0, 51, 220, 276, 324, 370, 437, 401, 332, },
{740, 577, 488, 446, 440, 364, 448, 208, 80, 50, 124, 244, 239, 226, 475, 353, 432, 502, 413, 343, 269, 342, 261, 203, 138, 75, 117, 51, 0, 169, 225, 273, 319, 386, 350, 281, },
{633, 468, 378, 277, 275, 199, 283, 189, 89, 119, 193, 413, 405, 321, 469, 281, 325, 393, 304, 236, 192, 270, 226, 147, 107, 170, 286, 220, 169, 0, 56, 104, 150, 217, 185, 116, },
{577, 412, 322, 221, 261, 255, 339, 245, 145, 175, 249, 469, 454, 370, 413, 225, 269, 337, 248, 180, 136, 214, 170, 91, 156, 219, 342, 276, 225, 56, 0, 48, 94, 161, 171, 172, },
{529, 364, 274, 173, 213, 275, 359, 265, 193, 223, 297, 517, 502, 418, 365, 177, 221, 289, 200, 132, 88, 166, 218, 139, 204, 267, 390, 324, 273, 104, 48, 0, 46, 113, 123, 192, },
{483, 318, 228, 127, 167, 229, 313, 219, 239, 269, 343, 563, 548, 464, 411, 223, 175, 243, 154, 86, 134, 212, 264, 185, 250, 313, 436, 370, 319, 150, 94, 46, 0, 67, 77, 146, },
{493, 251, 161, 60, 163, 263, 347, 286, 306, 336, 410, 630, 615, 531, 478, 290, 242, 176, 87, 153, 201, 279, 331, 252, 317, 380, 503, 437, 386, 217, 161, 113, 67, 0, 144, 213, },
{560, 395, 294, 193, 90, 152, 236, 142, 270, 300, 374, 594, 589, 506, 488, 300, 252, 320, 231, 163, 211, 289, 341, 262, 292, 355, 467, 401, 350, 185, 171, 123, 77, 144, 0, 69, },
{629, 464, 363, 262, 159, 83, 167, 73, 201, 231, 305, 525, 520, 437, 557, 369, 321, 389, 300, 232, 280, 358, 342, 263, 223, 286, 398, 332, 281, 116, 172, 192, 146, 213, 69, 0, }
                     };
        }
        //dp[i][j] now holds the shortest path between vertice i and j.
 }
