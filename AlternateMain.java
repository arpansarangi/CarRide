package application;
	
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.stage.Stage;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.animation.PathTransition;
import javafx.animation.SequentialTransition;
import javafx.scene.shape.*;
import javafx.scene.text.Text;
import javafx.util.Duration;
import javafx.scene.Group;
import javafx.scene.paint.Color; 
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;

public class Main extends Application {
	@Override
	public void start(Stage primaryStage) {
		try {
				Group root = new Group();			
				StackPane stack = new StackPane();			
				
				/*Circle circle = new Circle();
				circle.setRadius(10);
				circle.setCenterX(100);
				circle.setCenterY(50);
				circle.setFill(Color.BROWN);*/
				Cab cab = new Cab("Rohan");
				Cab cab2 = new Cab("Dingus");	
			   
				int[] arr = {120,135,135,200};
				int[] arr1 = {165,135,187,40};
				SequentialTransition sequentialtransition = makePath(cab, arr);
				SequentialTransition sequentialtransition1 = makePath(cab2, arr1);
				
			      
			    stack.getChildren().addAll(FXMLLoader.load(getClass().getResource("/MapFXML.fxml")),cab,cab2);
			    root.getChildren().add(stack);
				
				Scene scene = new Scene(root,560,550);
				scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
				primaryStage.setScene(scene);
				primaryStage.show();
				sequentialtransition.play();
				sequentialtransition1.play();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	static PathTransition addNode(Cab cab,double toX, double toY) {
		 double fromX = cab.getLayoutX();
	        double fromY = cab.getLayoutY();

	        Path path = new Path();
	        path.getElements().add(new MoveTo(fromX, fromY));
	        path.getElements().add(new LineTo(toX, toY));

	        PathTransition transition = new PathTransition();
	        transition.setPath(path);
	        transition.setNode(cab);
	        transition.setDelay(Duration.seconds(1));
	        transition.setDuration(Duration.seconds(2));
      
        return transition;
    }
	
	static PathTransition addNode(Cab cab,double toX, double toY,double fromX,double fromY) {
		 
	        Path path = new Path();
	        path.getElements().add(new MoveTo(fromX, fromY));
	        path.getElements().add(new LineTo(toX, toY));

	        PathTransition transition = new PathTransition();
	        transition.setPath(path);
	        transition.setNode(cab);
	        //transition.setDelay(Duration.seconds(1));
	        transition.setDuration(Duration.seconds(2));
     
       return transition;
   }
	private static SequentialTransition makePath (Cab cab,int[] arr)
	{
		
			SequentialTransition sequentialtransition = new SequentialTransition ();
			sequentialtransition.getChildren().add(addNode(cab,arr[0],arr[1]));
			for(int i=1;i<arr.length-1;i++)
			{
				sequentialtransition.getChildren().add(addNode(cab,arr[i],arr[i+1],arr[i-1],arr[i]));
			}
			return sequentialtransition;
	}
	
	private static class Cab extends StackPane
	{
			public Cab (String customer)
			{
				Circle circle = new Circle();
				circle.setRadius(20);
				circle.setCenterX(100);
				circle.setCenterY(50);
				circle.setFill(Color.AZURE);
				Text text = new Text(customer);
				this.getChildren().addAll(circle, text);	
				//new StackPane().getChildren().addAll(circle,text);
			}
	}
    
	public static void main(String[] args) {
        Map<Integer, Character> alpha = new HashMap<Integer, Character>();//Assigns the value 1 to 'a', 2 to 'b' and so on...
        Map<String, Integer> myMap = new HashMap<String, Integer>();//Assigns the value 1 to "aa", 2 to "ab' and so on...
        int [][]dp = new int[36][36];
        Vector<int> path = new path[36][36];
        preprocess(alpha, myMap, dp);
		launch(args);
	}
    static void preprocess(Map<Integer, Character> alpha, Map<String, Integer> myMap, int[][] dp)
    {
        dp = {
                           {0, 242, 335, 553, 650, 712, 796, 702, 722, 752, 826, 984, 858, 774, 525, 402, 308, 317, 406, 397, 471, 413, 494, 537, 602, 665, 857, 791, 740, 633, 577, 529, 483, 493, 560, 629, },
{242, 0, 93, 311, 414, 514, 598, 537, 557, 587, 661, 821, 737, 653, 427, 239, 145, 75, 164, 234, 308, 250, 331, 374, 439, 502, 694, 628, 577, 468, 412, 364, 318, 251, 395, 464, },
{481, 239, 0, 222, 325, 425, 509, 448, 468, 498, 572, 732, 648, 564, 496, 308, 234, 164, 75, 145, 219, 297, 364, 285, 350, 413, 605, 539, 488, 379, 323, 275, 229, 162, 306, 375, },
{553, 311, 101, 0, 103, 203, 287, 335, 366, 396, 470, 690, 675, 591, 538, 350, 302, 236, 147, 213, 261, 339, 391, 312, 377, 440, 563, 497, 446, 277, 221, 173, 127, 60, 193, 262, },
{650, 414, 204, 103, 0, 100, 184, 232, 360, 390, 464, 684, 679, 596, 578, 390, 342, 339, 250, 253, 301, 379, 431, 352, 382, 445, 557, 491, 440, 275, 261, 213, 167, 163, 90, 159, },
{712, 514, 304, 203, 100, 0, 84, 156, 284, 314, 388, 608, 603, 520, 640, 452, 404, 439, 350, 315, 363, 441, 425, 346, 306, 369, 481, 415, 364, 199, 255, 275, 229, 263, 152, 83, },
{796, 598, 388, 287, 184, 84, 0, 240, 368, 398, 472, 692, 687, 604, 724, 536, 488, 523, 434, 399, 447, 525, 509, 430, 390, 453, 565, 499, 448, 283, 339, 359, 313, 347, 236, 167, },
{702, 537, 436, 335, 232, 156, 240, 0, 128, 158, 232, 452, 447, 434, 630, 442, 394, 462, 373, 305, 353, 431, 415, 336, 296, 283, 325, 259, 208, 189, 245, 265, 219, 286, 142, 73, },
{722, 557, 467, 366, 360, 284, 368, 128, 0, 30, 104, 324, 319, 306, 555, 370, 414, 482, 393, 325, 281, 359, 315, 236, 196, 155, 197, 131, 80, 89, 145, 193, 239, 306, 270, 201, },
{752, 587, 497, 396, 390, 314, 398, 158, 30, 0, 74, 294, 289, 276, 525, 400, 444, 512, 423, 355, 311, 389, 311, 253, 188, 125, 167, 101, 50, 119, 175, 223, 269, 336, 300, 231, },
{826, 661, 571, 470, 464, 388, 472, 232, 104, 74, 0, 285, 280, 350, 599, 474, 518, 586, 497, 429, 385, 463, 385, 327, 262, 199, 158, 92, 124, 193, 249, 297, 343, 410, 374, 305, },
{984, 821, 732, 690, 684, 608, 692, 452, 324, 294, 285, 0, 130, 214, 463, 597, 676, 746, 657, 587, 513, 586, 505, 447, 382, 319, 127, 193, 244, 413, 469, 517, 563, 630, 594, 525, },
{858, 738, 649, 676, 679, 603, 687, 447, 319, 289, 280, 130, 0, 84, 333, 514, 593, 663, 574, 504, 430, 503, 422, 364, 299, 236, 122, 188, 239, 406, 455, 503, 549, 616, 589, 520, },
{774, 654, 565, 592, 597, 521, 605, 435, 307, 277, 351, 214, 84, 0, 249, 430, 509, 579, 490, 420, 346, 419, 338, 280, 215, 152, 206, 272, 227, 322, 371, 419, 465, 532, 507, 438, },
{525, 427, 496, 538, 578, 640, 724, 630, 556, 526, 600, 463, 333, 249, 0, 188, 282, 352, 421, 351, 277, 199, 280, 343, 403, 401, 455, 521, 476, 469, 413, 365, 411, 478, 488, 557, },
{402, 239, 308, 350, 390, 452, 536, 442, 370, 400, 474, 597, 513, 429, 188, 0, 94, 164, 233, 163, 89, 11, 92, 155, 215, 278, 470, 404, 353, 281, 225, 177, 223, 290, 300, 369, },
{308, 145, 234, 302, 342, 404, 488, 394, 414, 444, 518, 676, 592, 508, 282, 94, 0, 70, 159, 89, 163, 105, 186, 229, 294, 357, 549, 483, 432, 325, 269, 221, 175, 242, 252, 321, },
{317, 75, 164, 236, 339, 439, 523, 462, 482, 512, 586, 746, 662, 578, 352, 164, 70, 0, 89, 159, 233, 175, 256, 299, 364, 427, 619, 553, 502, 393, 337, 289, 243, 176, 320, 389, },
{406, 164, 75, 147, 250, 350, 434, 373, 393, 423, 497, 657, 573, 489, 421, 233, 159, 89, 0, 70, 144, 222, 289, 210, 275, 338, 530, 464, 413, 304, 248, 200, 154, 87, 231, 300, },
{397, 234, 145, 213, 253, 315, 399, 305, 325, 355, 429, 587, 503, 419, 351, 163, 89, 159, 70, 0, 74, 152, 219, 140, 205, 268, 460, 394, 343, 236, 180, 132, 86, 153, 163, 232, },
{471, 308, 219, 261, 301, 363, 447, 353, 281, 311, 385, 513, 429, 345, 277, 89, 163, 233, 144, 74, 0, 78, 145, 66, 131, 194, 386, 320, 269, 192, 136, 88, 134, 201, 211, 280, },
{413, 250, 297, 339, 379, 441, 525, 431, 359, 389, 463, 586, 502, 418, 199, 11, 105, 175, 222, 152, 78, 0, 81, 144, 204, 267, 459, 393, 342, 270, 214, 166, 212, 279, 289, 358, },
{494, 331, 364, 391, 431, 425, 509, 415, 315, 311, 385, 505, 421, 337, 280, 92, 186, 256, 289, 219, 145, 81, 0, 79, 123, 186, 378, 312, 261, 226, 170, 218, 264, 331, 341, 342, },
{537, 374, 285, 312, 352, 346, 430, 336, 236, 253, 327, 447, 363, 279, 343, 155, 229, 299, 210, 140, 66, 144, 79, 0, 65, 128, 320, 254, 203, 147, 91, 139, 185, 252, 262, 263, },
{602, 439, 350, 377, 382, 306, 390, 296, 196, 188, 262, 382, 298, 214, 403, 215, 294, 364, 275, 205, 131, 204, 123, 65, 0, 63, 255, 189, 138, 107, 156, 204, 250, 317, 292, 223, },
{665, 502, 413, 440, 445, 369, 453, 283, 155, 125, 199, 319, 235, 151, 400, 278, 357, 427, 338, 268, 194, 267, 186, 128, 63, 0, 192, 126, 75, 170, 219, 267, 313, 380, 355, 286, },
{857, 694, 605, 563, 557, 481, 565, 325, 197, 167, 158, 127, 122, 206, 455, 470, 549, 619, 530, 460, 386, 459, 378, 320, 255, 192, 0, 66, 117, 286, 342, 390, 436, 503, 467, 398, },
{791, 628, 539, 497, 491, 415, 499, 259, 131, 101, 92, 193, 188, 272, 521, 404, 483, 553, 464, 394, 320, 393, 312, 254, 189, 126, 66, 0, 51, 220, 276, 324, 370, 437, 401, 332, },
{740, 577, 488, 446, 440, 364, 448, 208, 80, 50, 124, 244, 239, 226, 475, 353, 432, 502, 413, 343, 269, 342, 261, 203, 138, 75, 117, 51, 0, 169, 225, 273, 319, 386, 350, 281, },
{633, 468, 378, 277, 275, 199, 283, 189, 89, 119, 193, 413, 405, 321, 469, 281, 325, 393, 304, 236, 192, 270, 226, 147, 107, 170, 286, 220, 169, 0, 56, 104, 150, 217, 185, 116, },
{577, 412, 322, 221, 261, 255, 339, 245, 145, 175, 249, 469, 454, 370, 413, 225, 269, 337, 248, 180, 136, 214, 170, 91, 156, 219, 342, 276, 225, 56, 0, 48, 94, 161, 171, 172, },
{529, 364, 274, 173, 213, 275, 359, 265, 193, 223, 297, 517, 502, 418, 365, 177, 221, 289, 200, 132, 88, 166, 218, 139, 204, 267, 390, 324, 273, 104, 48, 0, 46, 113, 123, 192, },
{483, 318, 228, 127, 167, 229, 313, 219, 239, 269, 343, 563, 548, 464, 411, 223, 175, 243, 154, 86, 134, 212, 264, 185, 250, 313, 436, 370, 319, 150, 94, 46, 0, 67, 77, 146, },
{493, 251, 161, 60, 163, 263, 347, 286, 306, 336, 410, 630, 615, 531, 478, 290, 242, 176, 87, 153, 201, 279, 331, 252, 317, 380, 503, 437, 386, 217, 161, 113, 67, 0, 144, 213, },
{560, 395, 294, 193, 90, 152, 236, 142, 270, 300, 374, 594, 589, 506, 488, 300, 252, 320, 231, 163, 211, 289, 341, 262, 292, 355, 467, 401, 350, 185, 171, 123, 77, 144, 0, 69, },
{629, 464, 363, 262, 159, 83, 167, 73, 201, 231, 305, 525, 520, 437, 557, 369, 321, 389, 300, 232, 280, 358, 342, 263, 223, 286, 398, 332, 281, 116, 172, 192, 146, 213, 69, 0, }
                     };       
        path[0][1]= {0, 1};
path[0][2]= {0, 1, 2};
path[0][3]= {0, 1, 2, 3};
path[0][4]= {0, 1, 2, 3, 4};
path[0][5]= {0, 1, 17, 6, 5};
path[0][6]= {0, 1, 17, 6};
path[0][7]= {0, 1, 17, 6, 7};
path[0][8]= {0, 1, 17, 6, 7, 8};
path[0][9]= {0, 1, 17, 6, 7, 8, 9};
path[0][10]= {0, 1, 17, 6, 7, 8, 9, 10};
path[0][11]= {0, 1, 17, 6, 7, 8, 9, 28, 27, 26, 11};
path[0][12]= {0, 14, 13, 12};
path[0][13]= {0, 14, 13};
path[0][14]= {0, 14};
path[0][15]= {0, 1, 17, 6, 15};
path[0][16]= {0, 16};
path[0][17]= {0, 1, 17};
path[0][18]= {0, 1, 17, 18};
path[0][19]= {0, 1, 17, 6, 19};
path[0][20]= {0, 1, 17, 6, 19, 20};
path[0][21]= {0, 1, 17, 6, 15, 21};
path[0][22]= {0, 1, 17, 6, 15, 21, 22};
path[0][23]= {0, 1, 17, 6, 19, 20, 23};
path[0][24]= {0, 1, 17, 6, 19, 20, 23, 24};
path[0][25]= {0, 1, 17, 6, 19, 20, 23, 24, 25};
path[0][26]= {0, 1, 17, 6, 7, 8, 9, 28, 27, 26};
path[0][27]= {0, 1, 17, 6, 7, 8, 9, 28, 27};
path[0][28]= {0, 1, 17, 6, 7, 8, 9, 28};
path[0][29]= {0, 1, 17, 6, 7, 35, 29};
path[0][30]= {0, 1, 17, 18, 33, 32, 31, 30};
path[0][31]= {0, 1, 17, 18, 33, 32, 31};
path[0][32]= {0, 1, 17, 18, 33, 32};
path[0][33]= {0, 1, 17, 18, 33};
path[0][34]= {0, 1, 17, 6, 7, 35, 34};
path[0][35]= {0, 1, 17, 6, 7, 35};
path[1][0]= {1, 0};
path[1][2]= {1, 2};
path[1][3]= {1, 2, 3};
path[1][4]= {1, 2, 3, 4};
path[1][5]= {1, 17, 6, 5};
path[1][6]= {1, 17, 6};
path[1][7]= {1, 17, 6, 7};
path[1][8]= {1, 17, 6, 7, 8};
path[1][9]= {1, 17, 6, 7, 8, 9};
path[1][10]= {1, 17, 6, 7, 8, 9, 10};
path[1][11]= {1, 17, 6, 7, 8, 9, 28, 27, 26, 11};
path[1][12]= {1, 17, 6, 7, 8, 9, 28, 27, 26, 12};
path[1][13]= {1, 17, 6, 19, 20, 23, 24, 25, 13};
path[1][14]= {1, 17, 6, 15, 14};
path[1][15]= {1, 17, 6, 15};
path[1][16]= {1, 0, 16};
path[1][17]= {1, 17};
path[1][18]= {1, 17, 18};
path[1][19]= {1, 17, 6, 19};
path[1][20]= {1, 17, 6, 19, 20};
path[1][21]= {1, 17, 6, 15, 21};
path[1][22]= {1, 17, 6, 15, 21, 22};
path[1][23]= {1, 17, 6, 19, 20, 23};
path[1][24]= {1, 17, 6, 19, 20, 23, 24};
path[1][25]= {1, 17, 6, 19, 20, 23, 24, 25};
path[1][26]= {1, 17, 6, 7, 8, 9, 28, 27, 26};
path[1][27]= {1, 17, 6, 7, 8, 9, 28, 27};
path[1][28]= {1, 17, 6, 7, 8, 9, 28};
path[1][29]= {1, 17, 6, 7, 35, 29};
path[1][30]= {1, 17, 18, 33, 32, 31, 30};
path[1][31]= {1, 17, 18, 33, 32, 31};
path[1][32]= {1, 17, 18, 33, 32};
path[1][33]= {1, 17, 18, 33};
path[1][34]= {1, 17, 6, 7, 35, 34};
path[1][35]= {1, 17, 6, 7, 35};
path[2][0]= {2, 1, 0};
path[2][1]= {2, 1};
path[2][3]= {2, 3};
path[2][4]= {2, 3, 4};
path[2][5]= {2, 3, 4, 5};
path[2][6]= {2, 18, 17, 6};
path[2][7]= {2, 18, 17, 6, 7};
path[2][8]= {2, 18, 17, 6, 7, 8};
path[2][9]= {2, 18, 17, 6, 7, 8, 9};
path[2][10]= {2, 18, 17, 6, 7, 8, 9, 10};
path[2][11]= {2, 18, 19, 20, 23, 24, 25, 28, 27, 26, 11};
path[2][12]= {2, 18, 19, 20, 23, 24, 25, 13, 12};
path[2][13]= {2, 18, 19, 20, 23, 24, 25, 13};
path[2][14]= {2, 18, 19, 20, 21, 15, 14};
path[2][15]= {2, 18, 19, 20, 21, 15};
path[2][16]= {2, 1, 0, 16};
path[2][17]= {2, 18, 17};
path[2][18]= {2, 18};
path[2][19]= {2, 18, 19};
path[2][20]= {2, 18, 19, 20};
path[2][21]= {2, 18, 19, 20, 21};
path[2][22]= {2, 18, 19, 20, 23, 22};
path[2][23]= {2, 18, 19, 20, 23};
path[2][24]= {2, 18, 19, 20, 23, 24};
path[2][25]= {2, 18, 19, 20, 23, 24, 25};
path[2][26]= {2, 18, 19, 20, 23, 24, 25, 28, 27, 26};
path[2][27]= {2, 18, 19, 20, 23, 24, 25, 28, 27};
path[2][28]= {2, 18, 19, 20, 23, 24, 25, 28};
path[2][29]= {2, 3, 33, 32, 31, 30, 29};
path[2][30]= {2, 3, 33, 32, 31, 30};
path[2][31]= {2, 3, 33, 32, 31};
path[2][32]= {2, 3, 33, 32};
path[2][33]= {2, 3, 33};
path[2][34]= {2, 3, 4, 34};
path[2][35]= {2, 3, 4, 34, 35};
path[3][0]= {3, 2, 1, 0};
path[3][1]= {3, 2, 1};
path[3][2]= {3, 2};
path[3][4]= {3, 4};
path[3][5]= {3, 4, 5};
path[3][6]= {3, 4, 5, 6};
path[3][7]= {3, 4, 34, 35, 7};
path[3][8]= {3, 33, 32, 31, 30, 29, 8};
path[3][9]= {3, 33, 32, 31, 30, 29, 8, 9};
path[3][10]= {3, 33, 32, 31, 30, 29, 8, 9, 10};
path[3][11]= {3, 33, 32, 31, 30, 29, 8, 9, 28, 27, 26, 11};
path[3][12]= {3, 33, 32, 31, 30, 23, 24, 25, 13, 12};
path[3][13]= {3, 33, 32, 31, 30, 23, 24, 25, 13};
path[3][14]= {3, 33, 32, 31, 20, 21, 15, 14};
path[3][15]= {3, 33, 32, 31, 20, 21, 15};
path[3][16]= {3, 2, 1, 0, 16};
path[3][17]= {3, 33, 18, 17};
path[3][18]= {3, 33, 18};
path[3][19]= {3, 33, 32, 19};
path[3][20]= {3, 33, 32, 31, 20};
path[3][21]= {3, 33, 32, 31, 20, 21};
path[3][22]= {3, 33, 32, 31, 30, 23, 22};
path[3][23]= {3, 33, 32, 31, 30, 23};
path[3][24]= {3, 33, 32, 31, 30, 23, 24};
path[3][25]= {3, 33, 32, 31, 30, 23, 24, 25};
path[3][26]= {3, 33, 32, 31, 30, 29, 8, 9, 28, 27, 26};
path[3][27]= {3, 33, 32, 31, 30, 29, 8, 9, 28, 27};
path[3][28]= {3, 33, 32, 31, 30, 29, 8, 9, 28};
path[3][29]= {3, 33, 32, 31, 30, 29};
path[3][30]= {3, 33, 32, 31, 30};
path[3][31]= {3, 33, 32, 31};
path[3][32]= {3, 33, 32};
path[3][33]= {3, 33};
path[3][34]= {3, 4, 34};
path[3][35]= {3, 4, 34, 35};
path[4][0]= {4, 3, 2, 1, 0};
path[4][1]= {4, 3, 2, 1};
path[4][2]= {4, 3, 2};
path[4][3]= {4, 3};
path[4][5]= {4, 5};
path[4][6]= {4, 5, 6};
path[4][7]= {4, 34, 35, 7};
path[4][8]= {4, 34, 35, 7, 8};
path[4][9]= {4, 34, 35, 7, 8, 9};
path[4][10]= {4, 34, 35, 7, 8, 9, 10};
path[4][11]= {4, 34, 35, 7, 8, 9, 28, 27, 26, 11};
path[4][12]= {4, 34, 35, 7, 8, 9, 28, 27, 26, 12};
path[4][13]= {4, 34, 35, 29, 24, 25, 13};
path[4][14]= {4, 5, 6, 15, 14};
path[4][15]= {4, 5, 6, 15};
path[4][16]= {4, 3, 2, 1, 0, 16};
path[4][17]= {4, 5, 6, 17};
path[4][18]= {4, 3, 33, 18};
path[4][19]= {4, 34, 32, 19};
path[4][20]= {4, 34, 32, 31, 20};
path[4][21]= {4, 5, 6, 15, 21};
path[4][22]= {4, 5, 6, 15, 21, 22};
path[4][23]= {4, 34, 32, 31, 30, 23};
path[4][24]= {4, 34, 35, 29, 24};
path[4][25]= {4, 34, 35, 29, 24, 25};
path[4][26]= {4, 34, 35, 7, 8, 9, 28, 27, 26};
path[4][27]= {4, 34, 35, 7, 8, 9, 28, 27};
path[4][28]= {4, 34, 35, 7, 8, 9, 28};
path[4][29]= {4, 34, 35, 29};
path[4][30]= {4, 34, 32, 31, 30};
path[4][31]= {4, 34, 32, 31};
path[4][32]= {4, 34, 32};
path[4][33]= {4, 3, 33};
path[4][34]= {4, 34};
path[4][35]= {4, 34, 35};
path[5][0]= {5, 6, 17, 1, 0};
path[5][1]= {5, 6, 17, 1};
path[5][2]= {5, 4, 3, 2};
path[5][3]= {5, 4, 3};
path[5][4]= {5, 4};
path[5][6]= {5, 6};
path[5][7]= {5, 35, 7};
path[5][8]= {5, 35, 7, 8};
path[5][9]= {5, 35, 7, 8, 9};
path[5][10]= {5, 35, 7, 8, 9, 10};
path[5][11]= {5, 35, 7, 8, 9, 28, 27, 26, 11};
path[5][12]= {5, 35, 7, 8, 9, 28, 27, 26, 12};
path[5][13]= {5, 35, 29, 24, 25, 13};
path[5][14]= {5, 6, 15, 14};
path[5][15]= {5, 6, 15};
path[5][16]= {5, 6, 17, 1, 0, 16};
path[5][17]= {5, 6, 17};
path[5][18]= {5, 6, 17, 18};
path[5][19]= {5, 6, 19};
path[5][20]= {5, 6, 19, 20};
path[5][21]= {5, 6, 15, 21};
path[5][22]= {5, 6, 15, 21, 22};
path[5][23]= {5, 6, 19, 20, 23};
path[5][24]= {5, 35, 29, 24};
path[5][25]= {5, 35, 29, 24, 25};
path[5][26]= {5, 35, 7, 8, 9, 28, 27, 26};
path[5][27]= {5, 35, 7, 8, 9, 28, 27};
path[5][28]= {5, 35, 7, 8, 9, 28};
path[5][29]= {5, 35, 29};
path[5][30]= {5, 35, 29, 30};
path[5][31]= {5, 35, 34, 32, 31};
path[5][32]= {5, 35, 34, 32};
path[5][33]= {5, 4, 3, 33};
path[5][34]= {5, 35, 34};
path[5][35]= {5, 35};
path[6][0]= {6, 17, 1, 0};
path[6][1]= {6, 17, 1};
path[6][2]= {6, 17, 18, 2};
path[6][3]= {6, 5, 4, 3};
path[6][4]= {6, 5, 4};
path[6][5]= {6, 5};
path[6][7]= {6, 7};
path[6][8]= {6, 7, 8};
path[6][9]= {6, 7, 8, 9};
path[6][10]= {6, 7, 8, 9, 10};
path[6][11]= {6, 7, 8, 9, 28, 27, 26, 11};
path[6][12]= {6, 7, 8, 9, 28, 27, 26, 12};
path[6][13]= {6, 19, 20, 23, 24, 25, 13};
path[6][14]= {6, 15, 14};
path[6][15]= {6, 15};
path[6][16]= {6, 17, 1, 0, 16};
path[6][17]= {6, 17};
path[6][18]= {6, 17, 18};
path[6][19]= {6, 19};
path[6][20]= {6, 19, 20};
path[6][21]= {6, 15, 21};
path[6][22]= {6, 15, 21, 22};
path[6][23]= {6, 19, 20, 23};
path[6][24]= {6, 19, 20, 23, 24};
path[6][25]= {6, 19, 20, 23, 24, 25};
path[6][26]= {6, 7, 8, 9, 28, 27, 26};
path[6][27]= {6, 7, 8, 9, 28, 27};
path[6][28]= {6, 7, 8, 9, 28};
path[6][29]= {6, 7, 35, 29};
path[6][30]= {6, 19, 32, 31, 30};
path[6][31]= {6, 19, 32, 31};
path[6][32]= {6, 19, 32};
path[6][33]= {6, 19, 32, 33};
path[6][34]= {6, 7, 35, 34};
path[6][35]= {6, 7, 35};
path[7][0]= {7, 6, 17, 1, 0};
path[7][1]= {7, 6, 17, 1};
path[7][2]= {7, 6, 17, 18, 2};
path[7][3]= {7, 35, 34, 4, 3};
path[7][4]= {7, 35, 34, 4};
path[7][5]= {7, 35, 5};
path[7][6]= {7, 6};
path[7][8]= {7, 8};
path[7][9]= {7, 8, 9};
path[7][10]= {7, 8, 9, 10};
path[7][11]= {7, 8, 9, 28, 27, 26, 11};
path[7][12]= {7, 8, 9, 28, 27, 26, 12};
path[7][13]= {7, 8, 9, 28, 25, 13};
path[7][14]= {7, 6, 15, 14};
path[7][15]= {7, 6, 15};
path[7][16]= {7, 6, 17, 1, 0, 16};
path[7][17]= {7, 6, 17};
path[7][18]= {7, 6, 17, 18};
path[7][19]= {7, 6, 19};
path[7][20]= {7, 6, 19, 20};
path[7][21]= {7, 6, 15, 21};
path[7][22]= {7, 6, 15, 21, 22};
path[7][23]= {7, 6, 19, 20, 23};
path[7][24]= {7, 35, 29, 24};
path[7][25]= {7, 8, 9, 28, 25};
path[7][26]= {7, 8, 9, 28, 27, 26};
path[7][27]= {7, 8, 9, 28, 27};
path[7][28]= {7, 8, 9, 28};
path[7][29]= {7, 35, 29};
path[7][30]= {7, 35, 29, 30};
path[7][31]= {7, 35, 34, 32, 31};
path[7][32]= {7, 35, 34, 32};
path[7][33]= {7, 35, 34, 32, 33};
path[7][34]= {7, 35, 34};
path[7][35]= {7, 35};
path[8][0]= {8, 7, 6, 17, 1, 0};
path[8][1]= {8, 7, 6, 17, 1};
path[8][2]= {8, 7, 6, 17, 18, 2};
path[8][3]= {8, 29, 30, 31, 32, 33, 3};
path[8][4]= {8, 7, 35, 34, 4};
path[8][5]= {8, 7, 35, 5};
path[8][6]= {8, 7, 6};
path[8][7]= {8, 7};
path[8][9]= {8, 9};
path[8][10]= {8, 9, 10};
path[8][11]= {8, 9, 28, 27, 26, 11};
path[8][12]= {8, 9, 28, 27, 26, 12};
path[8][13]= {8, 9, 28, 25, 13};
path[8][14]= {8, 7, 6, 15, 14};
path[8][15]= {8, 7, 6, 15};
path[8][16]= {8, 7, 6, 17, 1, 0, 16};
path[8][17]= {8, 7, 6, 17};
path[8][18]= {8, 7, 6, 17, 18};
path[8][19]= {8, 7, 6, 19};
path[8][20]= {8, 29, 30, 31, 20};
path[8][21]= {8, 7, 6, 15, 21};
path[8][22]= {8, 29, 30, 23, 22};
path[8][23]= {8, 29, 30, 23};
path[8][24]= {8, 29, 24};
path[8][25]= {8, 9, 28, 25};
path[8][26]= {8, 9, 28, 27, 26};
path[8][27]= {8, 9, 28, 27};
path[8][28]= {8, 9, 28};
path[8][29]= {8, 29};
path[8][30]= {8, 29, 30};
path[8][31]= {8, 29, 30, 31};
path[8][32]= {8, 29, 30, 31, 32};
path[8][33]= {8, 29, 30, 31, 32, 33};
path[8][34]= {8, 7, 35, 34};
path[8][35]= {8, 7, 35};
path[9][0]= {9, 8, 7, 6, 17, 1, 0};
path[9][1]= {9, 8, 7, 6, 17, 1};
path[9][2]= {9, 8, 7, 6, 17, 18, 2};
path[9][3]= {9, 8, 29, 30, 31, 32, 33, 3};
path[9][4]= {9, 8, 7, 35, 34, 4};
path[9][5]= {9, 8, 7, 35, 5};
path[9][6]= {9, 8, 7, 6};
path[9][7]= {9, 8, 7};
path[9][8]= {9, 8};
path[9][10]= {9, 10};
path[9][11]= {9, 28, 27, 26, 11};
path[9][12]= {9, 28, 27, 26, 12};
path[9][13]= {9, 28, 25, 13};
path[9][14]= {9, 8, 7, 6, 15, 14};
path[9][15]= {9, 8, 7, 6, 15};
path[9][16]= {9, 8, 7, 6, 17, 1, 0, 16};
path[9][17]= {9, 8, 7, 6, 17};
path[9][18]= {9, 8, 7, 6, 17, 18};
path[9][19]= {9, 8, 7, 6, 19};
path[9][20]= {9, 8, 29, 30, 31, 20};
path[9][21]= {9, 8, 7, 6, 15, 21};
path[9][22]= {9, 28, 25, 24, 22};
path[9][23]= {9, 28, 25, 24, 23};
path[9][24]= {9, 28, 25, 24};
path[9][25]= {9, 28, 25};
path[9][26]= {9, 28, 27, 26};
path[9][27]= {9, 28, 27};
path[9][28]= {9, 28};
path[9][29]= {9, 8, 29};
path[9][30]= {9, 8, 29, 30};
path[9][31]= {9, 8, 29, 30, 31};
path[9][32]= {9, 8, 29, 30, 31, 32};
path[9][33]= {9, 8, 29, 30, 31, 32, 33};
path[9][34]= {9, 8, 7, 35, 34};
path[9][35]= {9, 8, 7, 35};
path[10][0]= {10, 9, 8, 7, 6, 17, 1, 0};
path[10][1]= {10, 9, 8, 7, 6, 17, 1};
path[10][2]= {10, 9, 8, 7, 6, 17, 18, 2};
path[10][3]= {10, 9, 8, 29, 30, 31, 32, 33, 3};
path[10][4]= {10, 9, 8, 7, 35, 34, 4};
path[10][5]= {10, 9, 8, 7, 35, 5};
path[10][6]= {10, 9, 8, 7, 6};
path[10][7]= {10, 9, 8, 7};
path[10][8]= {10, 9, 8};
path[10][9]= {10, 9};
path[10][11]= {10, 27, 26, 11};
path[10][12]= {10, 27, 26, 12};
path[10][13]= {10, 9, 28, 25, 13};
path[10][14]= {10, 9, 8, 7, 6, 15, 14};
path[10][15]= {10, 9, 8, 7, 6, 15};
path[10][16]= {10, 9, 8, 7, 6, 17, 1, 0, 16};
path[10][17]= {10, 9, 8, 7, 6, 17};
path[10][18]= {10, 9, 8, 7, 6, 17, 18};
path[10][19]= {10, 9, 8, 7, 6, 19};
path[10][20]= {10, 9, 8, 29, 30, 31, 20};
path[10][21]= {10, 9, 8, 7, 6, 15, 21};
path[10][22]= {10, 9, 28, 25, 24, 22};
path[10][23]= {10, 9, 28, 25, 24, 23};
path[10][24]= {10, 9, 28, 25, 24};
path[10][25]= {10, 9, 28, 25};
path[10][26]= {10, 27, 26};
path[10][27]= {10, 27};
path[10][28]= {10, 9, 28};
path[10][29]= {10, 9, 8, 29};
path[10][30]= {10, 9, 8, 29, 30};
path[10][31]= {10, 9, 8, 29, 30, 31};
path[10][32]= {10, 9, 8, 29, 30, 31, 32};
path[10][33]= {10, 9, 8, 29, 30, 31, 32, 33};
path[10][34]= {10, 9, 8, 7, 35, 34};
path[10][35]= {10, 9, 8, 7, 35};
path[11][0]= {11, 26, 27, 28, 9, 8, 7, 6, 17, 1, 0};
path[11][1]= {11, 26, 27, 28, 9, 8, 7, 6, 17, 1};
path[11][2]= {11, 26, 27, 28, 25, 24, 23, 20, 19, 18, 2};
path[11][3]= {11, 26, 27, 28, 9, 8, 29, 30, 31, 32, 33, 3};
path[11][4]= {11, 26, 27, 28, 9, 8, 7, 35, 34, 4};
path[11][5]= {11, 26, 27, 28, 9, 8, 7, 35, 5};
path[11][6]= {11, 26, 27, 28, 9, 8, 7, 6};
path[11][7]= {11, 26, 27, 28, 9, 8, 7};
path[11][8]= {11, 26, 27, 28, 9, 8};
path[11][9]= {11, 26, 27, 28, 9};
path[11][10]= {11, 26, 27, 10};
path[11][12]= {11, 12};
path[11][13]= {11, 12, 13};
path[11][14]= {11, 12, 13, 14};
path[11][15]= {11, 26, 27, 28, 25, 24, 22, 21, 15};
path[11][16]= {11, 26, 27, 28, 9, 8, 7, 6, 17, 1, 0, 16};
path[11][17]= {11, 26, 27, 28, 9, 8, 7, 6, 17};
path[11][18]= {11, 26, 27, 28, 25, 24, 23, 20, 19, 18};
path[11][19]= {11, 26, 27, 28, 25, 24, 23, 20, 19};
path[11][20]= {11, 26, 27, 28, 25, 24, 23, 20};
path[11][21]= {11, 26, 27, 28, 25, 24, 22, 21};
path[11][22]= {11, 26, 27, 28, 25, 24, 22};
path[11][23]= {11, 26, 27, 28, 25, 24, 23};
path[11][24]= {11, 26, 27, 28, 25, 24};
path[11][25]= {11, 26, 27, 28, 25};
path[11][26]= {11, 26};
path[11][27]= {11, 26, 27};
path[11][28]= {11, 26, 27, 28};
path[11][29]= {11, 26, 27, 28, 9, 8, 29};
path[11][30]= {11, 26, 27, 28, 9, 8, 29, 30};
path[11][31]= {11, 26, 27, 28, 9, 8, 29, 30, 31};
path[11][32]= {11, 26, 27, 28, 9, 8, 29, 30, 31, 32};
path[11][33]= {11, 26, 27, 28, 9, 8, 29, 30, 31, 32, 33};
path[11][34]= {11, 26, 27, 28, 9, 8, 7, 35, 34};
path[11][35]= {11, 26, 27, 28, 9, 8, 7, 35};
path[12][0]= {12, 13, 14, 0};
path[12][1]= {12, 26, 27, 28, 9, 8, 7, 6, 17, 1};
path[12][2]= {12, 13, 25, 24, 23, 20, 19, 18, 2};
path[12][3]= {12, 13, 25, 24, 23, 30, 31, 32, 33, 3};
path[12][4]= {12, 26, 27, 28, 9, 8, 7, 35, 34, 4};
path[12][5]= {12, 26, 27, 28, 9, 8, 7, 35, 5};
path[12][6]= {12, 26, 27, 28, 9, 8, 7, 6};
path[12][7]= {12, 26, 27, 28, 9, 8, 7};
path[12][8]= {12, 26, 27, 28, 9, 8};
path[12][9]= {12, 26, 27, 28, 9};
path[12][10]= {12, 26, 27, 10};
path[12][11]= {12, 11};
path[12][13]= {12, 13};
path[12][14]= {12, 13, 14};
path[12][15]= {12, 13, 25, 24, 22, 21, 15};
path[12][16]= {12, 13, 14, 0, 16};
path[12][17]= {12, 26, 27, 28, 9, 8, 7, 6, 17};
path[12][18]= {12, 13, 25, 24, 23, 20, 19, 18};
path[12][19]= {12, 13, 25, 24, 23, 20, 19};
path[12][20]= {12, 13, 25, 24, 23, 20};
path[12][21]= {12, 13, 25, 24, 22, 21};
path[12][22]= {12, 13, 25, 24, 22};
path[12][23]= {12, 13, 25, 24, 23};
path[12][24]= {12, 13, 25, 24};
path[12][25]= {12, 13, 25};
path[12][26]= {12, 26};
path[12][27]= {12, 26, 27};
path[12][28]= {12, 26, 27, 28};
path[12][29]= {12, 13, 25, 24, 29};
path[12][30]= {12, 13, 25, 24, 23, 30};
path[12][31]= {12, 13, 25, 24, 23, 30, 31};
path[12][32]= {12, 13, 25, 24, 23, 30, 31, 32};
path[12][33]= {12, 13, 25, 24, 23, 30, 31, 32, 33};
path[12][34]= {12, 26, 27, 28, 9, 8, 7, 35, 34};
path[12][35]= {12, 26, 27, 28, 9, 8, 7, 35};
path[13][0]= {13, 14, 0};
path[13][1]= {13, 25, 24, 23, 20, 19, 6, 17, 1};
path[13][2]= {13, 25, 24, 23, 20, 19, 18, 2};
path[13][3]= {13, 25, 24, 23, 30, 31, 32, 33, 3};
path[13][4]= {13, 25, 24, 29, 35, 34, 4};
path[13][5]= {13, 25, 24, 29, 35, 5};
path[13][6]= {13, 25, 24, 23, 20, 19, 6};
path[13][7]= {13, 25, 28, 9, 8, 7};
path[13][8]= {13, 25, 28, 9, 8};
path[13][9]= {13, 25, 28, 9};
path[13][10]= {13, 25, 28, 9, 10};
path[13][11]= {13, 12, 11};
path[13][12]= {13, 12};
path[13][14]= {13, 14};
path[13][15]= {13, 25, 24, 22, 21, 15};
path[13][16]= {13, 14, 0, 16};
path[13][17]= {13, 25, 24, 23, 20, 19, 6, 17};
path[13][18]= {13, 25, 24, 23, 20, 19, 18};
path[13][19]= {13, 25, 24, 23, 20, 19};
path[13][20]= {13, 25, 24, 23, 20};
path[13][21]= {13, 25, 24, 22, 21};
path[13][22]= {13, 25, 24, 22};
path[13][23]= {13, 25, 24, 23};
path[13][24]= {13, 25, 24};
path[13][25]= {13, 25};
path[13][26]= {13, 12, 26};
path[13][27]= {13, 12, 26, 27};
path[13][28]= {13, 25, 28};
path[13][29]= {13, 25, 24, 29};
path[13][30]= {13, 25, 24, 23, 30};
path[13][31]= {13, 25, 24, 23, 30, 31};
path[13][32]= {13, 25, 24, 23, 30, 31, 32};
path[13][33]= {13, 25, 24, 23, 30, 31, 32, 33};
path[13][34]= {13, 25, 24, 29, 35, 34};
path[13][35]= {13, 25, 24, 29, 35};
path[14][0]= {14, 0};
path[14][1]= {14, 15, 6, 17, 1};
path[14][2]= {14, 15, 21, 20, 19, 18, 2};
path[14][3]= {14, 15, 21, 20, 31, 32, 33, 3};
path[14][4]= {14, 15, 6, 5, 4};
path[14][5]= {14, 15, 6, 5};
path[14][6]= {14, 15, 6};
path[14][7]= {14, 15, 6, 7};
path[14][8]= {14, 15, 6, 7, 8};
path[14][9]= {14, 15, 6, 7, 8, 9};
path[14][10]= {14, 15, 6, 7, 8, 9, 10};
path[14][11]= {14, 13, 12, 11};
path[14][12]= {14, 13, 12};
path[14][13]= {14, 13};
path[14][15]= {14, 15};
path[14][16]= {14, 0, 16};
path[14][17]= {14, 15, 6, 17};
path[14][18]= {14, 15, 21, 20, 19, 18};
path[14][19]= {14, 15, 21, 20, 19};
path[14][20]= {14, 15, 21, 20};
path[14][21]= {14, 15, 21};
path[14][22]= {14, 15, 21, 22};
path[14][23]= {14, 15, 21, 20, 23};
path[14][24]= {14, 15, 21, 22, 24};
path[14][25]= {14, 13, 25};
path[14][26]= {14, 13, 12, 26};
path[14][27]= {14, 13, 12, 26, 27};
path[14][28]= {14, 13, 25, 28};
path[14][29]= {14, 15, 21, 20, 31, 30, 29};
path[14][30]= {14, 15, 21, 20, 31, 30};
path[14][31]= {14, 15, 21, 20, 31};
path[14][32]= {14, 15, 21, 20, 31, 32};
path[14][33]= {14, 15, 21, 20, 31, 32, 33};
path[14][34]= {14, 15, 21, 20, 31, 32, 34};
path[14][35]= {14, 15, 6, 7, 35};
path[15][0]= {15, 6, 17, 1, 0};
path[15][1]= {15, 6, 17, 1};
path[15][2]= {15, 21, 20, 19, 18, 2};
path[15][3]= {15, 21, 20, 31, 32, 33, 3};
path[15][4]= {15, 6, 5, 4};
path[15][5]= {15, 6, 5};
path[15][6]= {15, 6};
path[15][7]= {15, 6, 7};
path[15][8]= {15, 6, 7, 8};
path[15][9]= {15, 6, 7, 8, 9};
path[15][10]= {15, 6, 7, 8, 9, 10};
path[15][11]= {15, 21, 22, 24, 25, 28, 27, 26, 11};
path[15][12]= {15, 21, 22, 24, 25, 13, 12};
path[15][13]= {15, 21, 22, 24, 25, 13};
path[15][14]= {15, 14};
path[15][16]= {15, 6, 17, 1, 0, 16};
path[15][17]= {15, 6, 17};
path[15][18]= {15, 21, 20, 19, 18};
path[15][19]= {15, 21, 20, 19};
path[15][20]= {15, 21, 20};
path[15][21]= {15, 21};
path[15][22]= {15, 21, 22};
path[15][23]= {15, 21, 20, 23};
path[15][24]= {15, 21, 22, 24};
path[15][25]= {15, 21, 22, 24, 25};
path[15][26]= {15, 21, 22, 24, 25, 28, 27, 26};
path[15][27]= {15, 21, 22, 24, 25, 28, 27};
path[15][28]= {15, 21, 22, 24, 25, 28};
path[15][29]= {15, 21, 20, 31, 30, 29};
path[15][30]= {15, 21, 20, 31, 30};
path[15][31]= {15, 21, 20, 31};
path[15][32]= {15, 21, 20, 31, 32};
path[15][33]= {15, 21, 20, 31, 32, 33};
path[15][34]= {15, 21, 20, 31, 32, 34};
path[15][35]= {15, 6, 7, 35};
path[16][0]= {16, 0};
path[16][1]= {16, 0, 1};
path[16][2]= {16, 0, 1, 2};
path[16][3]= {16, 0, 1, 2, 3};
path[16][4]= {16, 0, 1, 2, 3, 4};
path[16][5]= {16, 0, 1, 17, 6, 5};
path[16][6]= {16, 0, 1, 17, 6};
path[16][7]= {16, 0, 1, 17, 6, 7};
path[16][8]= {16, 0, 1, 17, 6, 7, 8};
path[16][9]= {16, 0, 1, 17, 6, 7, 8, 9};
path[16][10]= {16, 0, 1, 17, 6, 7, 8, 9, 10};
path[16][11]= {16, 0, 1, 17, 6, 7, 8, 9, 28, 27, 26, 11};
path[16][12]= {16, 0, 14, 13, 12};
path[16][13]= {16, 0, 14, 13};
path[16][14]= {16, 0, 14};
path[16][15]= {16, 0, 1, 17, 6, 15};
path[16][17]= {16, 0, 1, 17};
path[16][18]= {16, 0, 1, 17, 18};
path[16][19]= {16, 0, 1, 17, 6, 19};
path[16][20]= {16, 0, 1, 17, 6, 19, 20};
path[16][21]= {16, 0, 1, 17, 6, 15, 21};
path[16][22]= {16, 0, 1, 17, 6, 15, 21, 22};
path[16][23]= {16, 0, 1, 17, 6, 19, 20, 23};
path[16][24]= {16, 0, 1, 17, 6, 19, 20, 23, 24};
path[16][25]= {16, 0, 1, 17, 6, 19, 20, 23, 24, 25};
path[16][26]= {16, 0, 1, 17, 6, 7, 8, 9, 28, 27, 26};
path[16][27]= {16, 0, 1, 17, 6, 7, 8, 9, 28, 27};
path[16][28]= {16, 0, 1, 17, 6, 7, 8, 9, 28};
path[16][29]= {16, 0, 1, 17, 6, 7, 35, 29};
path[16][30]= {16, 0, 1, 17, 18, 33, 32, 31, 30};
path[16][31]= {16, 0, 1, 17, 18, 33, 32, 31};
path[16][32]= {16, 0, 1, 17, 18, 33, 32};
path[16][33]= {16, 0, 1, 17, 18, 33};
path[16][34]= {16, 0, 1, 17, 6, 7, 35, 34};
path[16][35]= {16, 0, 1, 17, 6, 7, 35};
path[17][0]= {17, 1, 0};
path[17][1]= {17, 1};
path[17][2]= {17, 18, 2};
path[17][3]= {17, 18, 33, 3};
path[17][4]= {17, 6, 5, 4};
path[17][5]= {17, 6, 5};
path[17][6]= {17, 6};
path[17][7]= {17, 6, 7};
path[17][8]= {17, 6, 7, 8};
path[17][9]= {17, 6, 7, 8, 9};
path[17][10]= {17, 6, 7, 8, 9, 10};
path[17][11]= {17, 6, 7, 8, 9, 28, 27, 26, 11};
path[17][12]= {17, 6, 7, 8, 9, 28, 27, 26, 12};
path[17][13]= {17, 6, 19, 20, 23, 24, 25, 13};
path[17][14]= {17, 6, 15, 14};
path[17][15]= {17, 6, 15};
path[17][16]= {17, 1, 0, 16};
path[17][18]= {17, 18};
path[17][19]= {17, 6, 19};
path[17][20]= {17, 6, 19, 20};
path[17][21]= {17, 6, 15, 21};
path[17][22]= {17, 6, 15, 21, 22};
path[17][23]= {17, 6, 19, 20, 23};
path[17][24]= {17, 6, 19, 20, 23, 24};
path[17][25]= {17, 6, 19, 20, 23, 24, 25};
path[17][26]= {17, 6, 7, 8, 9, 28, 27, 26};
path[17][27]= {17, 6, 7, 8, 9, 28, 27};
path[17][28]= {17, 6, 7, 8, 9, 28};
path[17][29]= {17, 6, 7, 35, 29};
path[17][30]= {17, 18, 33, 32, 31, 30};
path[17][31]= {17, 18, 33, 32, 31};
path[17][32]= {17, 18, 33, 32};
path[17][33]= {17, 18, 33};
path[17][34]= {17, 6, 7, 35, 34};
path[17][35]= {17, 6, 7, 35};
path[18][0]= {18, 17, 1, 0};
path[18][1]= {18, 17, 1};
path[18][2]= {18, 2};
path[18][3]= {18, 33, 3};
path[18][4]= {18, 33, 3, 4};
path[18][5]= {18, 17, 6, 5};
path[18][6]= {18, 17, 6};
path[18][7]= {18, 17, 6, 7};
path[18][8]= {18, 17, 6, 7, 8};
path[18][9]= {18, 17, 6, 7, 8, 9};
path[18][10]= {18, 17, 6, 7, 8, 9, 10};
path[18][11]= {18, 19, 20, 23, 24, 25, 28, 27, 26, 11};
path[18][12]= {18, 19, 20, 23, 24, 25, 13, 12};
path[18][13]= {18, 19, 20, 23, 24, 25, 13};
path[18][14]= {18, 19, 20, 21, 15, 14};
path[18][15]= {18, 19, 20, 21, 15};
path[18][16]= {18, 17, 1, 0, 16};
path[18][17]= {18, 17};
path[18][19]= {18, 19};
path[18][20]= {18, 19, 20};
path[18][21]= {18, 19, 20, 21};
path[18][22]= {18, 19, 20, 23, 22};
path[18][23]= {18, 19, 20, 23};
path[18][24]= {18, 19, 20, 23, 24};
path[18][25]= {18, 19, 20, 23, 24, 25};
path[18][26]= {18, 19, 20, 23, 24, 25, 28, 27, 26};
path[18][27]= {18, 19, 20, 23, 24, 25, 28, 27};
path[18][28]= {18, 19, 20, 23, 24, 25, 28};
path[18][29]= {18, 33, 32, 31, 30, 29};
path[18][30]= {18, 33, 32, 31, 30};
path[18][31]= {18, 33, 32, 31};
path[18][32]= {18, 33, 32};
path[18][33]= {18, 33};
path[18][34]= {18, 33, 32, 34};
path[18][35]= {18, 33, 32, 34, 35};
path[19][0]= {19, 6, 17, 1, 0};
path[19][1]= {19, 6, 17, 1};
path[19][2]= {19, 18, 2};
path[19][3]= {19, 32, 33, 3};
path[19][4]= {19, 32, 34, 4};
path[19][5]= {19, 6, 5};
path[19][6]= {19, 6};
path[19][7]= {19, 6, 7};
path[19][8]= {19, 6, 7, 8};
path[19][9]= {19, 6, 7, 8, 9};
path[19][10]= {19, 6, 7, 8, 9, 10};
path[19][11]= {19, 20, 23, 24, 25, 28, 27, 26, 11};
path[19][12]= {19, 20, 23, 24, 25, 13, 12};
path[19][13]= {19, 20, 23, 24, 25, 13};
path[19][14]= {19, 20, 21, 15, 14};
path[19][15]= {19, 20, 21, 15};
path[19][16]= {19, 6, 17, 1, 0, 16};
path[19][17]= {19, 6, 17};
path[19][18]= {19, 18};
path[19][20]= {19, 20};
path[19][21]= {19, 20, 21};
path[19][22]= {19, 20, 23, 22};
path[19][23]= {19, 20, 23};
path[19][24]= {19, 20, 23, 24};
path[19][25]= {19, 20, 23, 24, 25};
path[19][26]= {19, 20, 23, 24, 25, 28, 27, 26};
path[19][27]= {19, 20, 23, 24, 25, 28, 27};
path[19][28]= {19, 20, 23, 24, 25, 28};
path[19][29]= {19, 32, 31, 30, 29};
path[19][30]= {19, 32, 31, 30};
path[19][31]= {19, 32, 31};
path[19][32]= {19, 32};
path[19][33]= {19, 32, 33};
path[19][34]= {19, 32, 34};
path[19][35]= {19, 32, 34, 35};
path[20][0]= {20, 19, 6, 17, 1, 0};
path[20][1]= {20, 19, 6, 17, 1};
path[20][2]= {20, 19, 18, 2};
path[20][3]= {20, 31, 32, 33, 3};
path[20][4]= {20, 31, 32, 34, 4};
path[20][5]= {20, 19, 6, 5};
path[20][6]= {20, 19, 6};
path[20][7]= {20, 19, 6, 7};
path[20][8]= {20, 31, 30, 29, 8};
path[20][9]= {20, 31, 30, 29, 8, 9};
path[20][10]= {20, 31, 30, 29, 8, 9, 10};
path[20][11]= {20, 23, 24, 25, 28, 27, 26, 11};
path[20][12]= {20, 23, 24, 25, 13, 12};
path[20][13]= {20, 23, 24, 25, 13};
path[20][14]= {20, 21, 15, 14};
path[20][15]= {20, 21, 15};
path[20][16]= {20, 19, 6, 17, 1, 0, 16};
path[20][17]= {20, 19, 6, 17};
path[20][18]= {20, 19, 18};
path[20][19]= {20, 19};
path[20][21]= {20, 21};
path[20][22]= {20, 23, 22};
path[20][23]= {20, 23};
path[20][24]= {20, 23, 24};
path[20][25]= {20, 23, 24, 25};
path[20][26]= {20, 23, 24, 25, 28, 27, 26};
path[20][27]= {20, 23, 24, 25, 28, 27};
path[20][28]= {20, 23, 24, 25, 28};
path[20][29]= {20, 31, 30, 29};
path[20][30]= {20, 31, 30};
path[20][31]= {20, 31};
path[20][32]= {20, 31, 32};
path[20][33]= {20, 31, 32, 33};
path[20][34]= {20, 31, 32, 34};
path[20][35]= {20, 31, 32, 34, 35};
path[21][0]= {21, 15, 6, 17, 1, 0};
path[21][1]= {21, 15, 6, 17, 1};
path[21][2]= {21, 20, 19, 18, 2};
path[21][3]= {21, 20, 31, 32, 33, 3};
path[21][4]= {21, 15, 6, 5, 4};
path[21][5]= {21, 15, 6, 5};
path[21][6]= {21, 15, 6};
path[21][7]= {21, 15, 6, 7};
path[21][8]= {21, 15, 6, 7, 8};
path[21][9]= {21, 15, 6, 7, 8, 9};
path[21][10]= {21, 15, 6, 7, 8, 9, 10};
path[21][11]= {21, 22, 24, 25, 28, 27, 26, 11};
path[21][12]= {21, 22, 24, 25, 13, 12};
path[21][13]= {21, 22, 24, 25, 13};
path[21][14]= {21, 15, 14};
path[21][15]= {21, 15};
path[21][16]= {21, 15, 6, 17, 1, 0, 16};
path[21][17]= {21, 15, 6, 17};
path[21][18]= {21, 20, 19, 18};
path[21][19]= {21, 20, 19};
path[21][20]= {21, 20};
path[21][22]= {21, 22};
path[21][23]= {21, 20, 23};
path[21][24]= {21, 22, 24};
path[21][25]= {21, 22, 24, 25};
path[21][26]= {21, 22, 24, 25, 28, 27, 26};
path[21][27]= {21, 22, 24, 25, 28, 27};
path[21][28]= {21, 22, 24, 25, 28};
path[21][29]= {21, 20, 31, 30, 29};
path[21][30]= {21, 20, 31, 30};
path[21][31]= {21, 20, 31};
path[21][32]= {21, 20, 31, 32};
path[21][33]= {21, 20, 31, 32, 33};
path[21][34]= {21, 20, 31, 32, 34};
path[21][35]= {21, 15, 6, 7, 35};
path[22][0]= {22, 21, 15, 6, 17, 1, 0};
path[22][1]= {22, 21, 15, 6, 17, 1};
path[22][2]= {22, 23, 20, 19, 18, 2};
path[22][3]= {22, 23, 30, 31, 32, 33, 3};
path[22][4]= {22, 21, 15, 6, 5, 4};
path[22][5]= {22, 21, 15, 6, 5};
path[22][6]= {22, 21, 15, 6};
path[22][7]= {22, 21, 15, 6, 7};
path[22][8]= {22, 23, 30, 29, 8};
path[22][9]= {22, 24, 25, 28, 9};
path[22][10]= {22, 24, 25, 28, 9, 10};
path[22][11]= {22, 24, 25, 28, 27, 26, 11};
path[22][12]= {22, 24, 25, 13, 12};
path[22][13]= {22, 24, 25, 13};
path[22][14]= {22, 21, 15, 14};
path[22][15]= {22, 21, 15};
path[22][16]= {22, 21, 15, 6, 17, 1, 0, 16};
path[22][17]= {22, 21, 15, 6, 17};
path[22][18]= {22, 23, 20, 19, 18};
path[22][19]= {22, 23, 20, 19};
path[22][20]= {22, 23, 20};
path[22][21]= {22, 21};
path[22][23]= {22, 23};
path[22][24]= {22, 24};
path[22][25]= {22, 24, 25};
path[22][26]= {22, 24, 25, 28, 27, 26};
path[22][27]= {22, 24, 25, 28, 27};
path[22][28]= {22, 24, 25, 28};
path[22][29]= {22, 23, 30, 29};
path[22][30]= {22, 23, 30};
path[22][31]= {22, 23, 30, 31};
path[22][32]= {22, 23, 30, 31, 32};
path[22][33]= {22, 23, 30, 31, 32, 33};
path[22][34]= {22, 23, 30, 31, 32, 34};
path[22][35]= {22, 21, 15, 6, 7, 35};
path[23][0]= {23, 20, 19, 6, 17, 1, 0};
path[23][1]= {23, 20, 19, 6, 17, 1};
path[23][2]= {23, 20, 19, 18, 2};
path[23][3]= {23, 30, 31, 32, 33, 3};
path[23][4]= {23, 30, 31, 32, 34, 4};
path[23][5]= {23, 20, 19, 6, 5};
path[23][6]= {23, 20, 19, 6};
path[23][7]= {23, 20, 19, 6, 7};
path[23][8]= {23, 30, 29, 8};
path[23][9]= {23, 24, 25, 28, 9};
path[23][10]= {23, 24, 25, 28, 9, 10};
path[23][11]= {23, 24, 25, 28, 27, 26, 11};
path[23][12]= {23, 24, 25, 13, 12};
path[23][13]= {23, 24, 25, 13};
path[23][14]= {23, 20, 21, 15, 14};
path[23][15]= {23, 20, 21, 15};
path[23][16]= {23, 20, 19, 6, 17, 1, 0, 16};
path[23][17]= {23, 20, 19, 6, 17};
path[23][18]= {23, 20, 19, 18};
path[23][19]= {23, 20, 19};
path[23][20]= {23, 20};
path[23][21]= {23, 20, 21};
path[23][22]= {23, 22};
path[23][24]= {23, 24};
path[23][25]= {23, 24, 25};
path[23][26]= {23, 24, 25, 28, 27, 26};
path[23][27]= {23, 24, 25, 28, 27};
path[23][28]= {23, 24, 25, 28};
path[23][29]= {23, 30, 29};
path[23][30]= {23, 30};
path[23][31]= {23, 30, 31};
path[23][32]= {23, 30, 31, 32};
path[23][33]= {23, 30, 31, 32, 33};
path[23][34]= {23, 30, 31, 32, 34};
path[23][35]= {23, 30, 29, 35};
path[24][0]= {24, 23, 20, 19, 6, 17, 1, 0};
path[24][1]= {24, 23, 20, 19, 6, 17, 1};
path[24][2]= {24, 23, 20, 19, 18, 2};
path[24][3]= {24, 23, 30, 31, 32, 33, 3};
path[24][4]= {24, 29, 35, 34, 4};
path[24][5]= {24, 29, 35, 5};
path[24][6]= {24, 23, 20, 19, 6};
path[24][7]= {24, 29, 35, 7};
path[24][8]= {24, 29, 8};
path[24][9]= {24, 25, 28, 9};
path[24][10]= {24, 25, 28, 9, 10};
path[24][11]= {24, 25, 28, 27, 26, 11};
path[24][12]= {24, 25, 13, 12};
path[24][13]= {24, 25, 13};
path[24][14]= {24, 22, 21, 15, 14};
path[24][15]= {24, 22, 21, 15};
path[24][16]= {24, 23, 20, 19, 6, 17, 1, 0, 16};
path[24][17]= {24, 23, 20, 19, 6, 17};
path[24][18]= {24, 23, 20, 19, 18};
path[24][19]= {24, 23, 20, 19};
path[24][20]= {24, 23, 20};
path[24][21]= {24, 22, 21};
path[24][22]= {24, 22};
path[24][23]= {24, 23};
path[24][25]= {24, 25};
path[24][26]= {24, 25, 28, 27, 26};
path[24][27]= {24, 25, 28, 27};
path[24][28]= {24, 25, 28};
path[24][29]= {24, 29};
path[24][30]= {24, 23, 30};
path[24][31]= {24, 23, 30, 31};
path[24][32]= {24, 23, 30, 31, 32};
path[24][33]= {24, 23, 30, 31, 32, 33};
path[24][34]= {24, 29, 35, 34};
path[24][35]= {24, 29, 35};
path[25][0]= {25, 24, 23, 20, 19, 6, 17, 1, 0};
path[25][1]= {25, 24, 23, 20, 19, 6, 17, 1};
path[25][2]= {25, 24, 23, 20, 19, 18, 2};
path[25][3]= {25, 24, 23, 30, 31, 32, 33, 3};
path[25][4]= {25, 24, 29, 35, 34, 4};
path[25][5]= {25, 24, 29, 35, 5};
path[25][6]= {25, 24, 23, 20, 19, 6};
path[25][7]= {25, 28, 9, 8, 7};
path[25][8]= {25, 28, 9, 8};
path[25][9]= {25, 28, 9};
path[25][10]= {25, 28, 9, 10};
path[25][11]= {25, 28, 27, 26, 11};
path[25][12]= {25, 13, 12};
path[25][13]= {25, 13};
path[25][14]= {25, 13, 14};
path[25][15]= {25, 24, 22, 21, 15};
path[25][16]= {25, 24, 23, 20, 19, 6, 17, 1, 0, 16};
path[25][17]= {25, 24, 23, 20, 19, 6, 17};
path[25][18]= {25, 24, 23, 20, 19, 18};
path[25][19]= {25, 24, 23, 20, 19};
path[25][20]= {25, 24, 23, 20};
path[25][21]= {25, 24, 22, 21};
path[25][22]= {25, 24, 22};
path[25][23]= {25, 24, 23};
path[25][24]= {25, 24};
path[25][26]= {25, 28, 27, 26};
path[25][27]= {25, 28, 27};
path[25][28]= {25, 28};
path[25][29]= {25, 24, 29};
path[25][30]= {25, 24, 23, 30};
path[25][31]= {25, 24, 23, 30, 31};
path[25][32]= {25, 24, 23, 30, 31, 32};
path[25][33]= {25, 24, 23, 30, 31, 32, 33};
path[25][34]= {25, 24, 29, 35, 34};
path[25][35]= {25, 24, 29, 35};
path[26][0]= {26, 27, 28, 9, 8, 7, 6, 17, 1, 0};
path[26][1]= {26, 27, 28, 9, 8, 7, 6, 17, 1};
path[26][2]= {26, 27, 28, 25, 24, 23, 20, 19, 18, 2};
path[26][3]= {26, 27, 28, 9, 8, 29, 30, 31, 32, 33, 3};
path[26][4]= {26, 27, 28, 9, 8, 7, 35, 34, 4};
path[26][5]= {26, 27, 28, 9, 8, 7, 35, 5};
path[26][6]= {26, 27, 28, 9, 8, 7, 6};
path[26][7]= {26, 27, 28, 9, 8, 7};
path[26][8]= {26, 27, 28, 9, 8};
path[26][9]= {26, 27, 28, 9};
path[26][10]= {26, 27, 10};
path[26][11]= {26, 11};
path[26][12]= {26, 12};
path[26][13]= {26, 12, 13};
path[26][14]= {26, 12, 13, 14};
path[26][15]= {26, 27, 28, 25, 24, 22, 21, 15};
path[26][16]= {26, 27, 28, 9, 8, 7, 6, 17, 1, 0, 16};
path[26][17]= {26, 27, 28, 9, 8, 7, 6, 17};
path[26][18]= {26, 27, 28, 25, 24, 23, 20, 19, 18};
path[26][19]= {26, 27, 28, 25, 24, 23, 20, 19};
path[26][20]= {26, 27, 28, 25, 24, 23, 20};
path[26][21]= {26, 27, 28, 25, 24, 22, 21};
path[26][22]= {26, 27, 28, 25, 24, 22};
path[26][23]= {26, 27, 28, 25, 24, 23};
path[26][24]= {26, 27, 28, 25, 24};
path[26][25]= {26, 27, 28, 25};
path[26][27]= {26, 27};
path[26][28]= {26, 27, 28};
path[26][29]= {26, 27, 28, 9, 8, 29};
path[26][30]= {26, 27, 28, 9, 8, 29, 30};
path[26][31]= {26, 27, 28, 9, 8, 29, 30, 31};
path[26][32]= {26, 27, 28, 9, 8, 29, 30, 31, 32};
path[26][33]= {26, 27, 28, 9, 8, 29, 30, 31, 32, 33};
path[26][34]= {26, 27, 28, 9, 8, 7, 35, 34};
path[26][35]= {26, 27, 28, 9, 8, 7, 35};
path[27][0]= {27, 28, 9, 8, 7, 6, 17, 1, 0};
path[27][1]= {27, 28, 9, 8, 7, 6, 17, 1};
path[27][2]= {27, 28, 25, 24, 23, 20, 19, 18, 2};
path[27][3]= {27, 28, 9, 8, 29, 30, 31, 32, 33, 3};
path[27][4]= {27, 28, 9, 8, 7, 35, 34, 4};
path[27][5]= {27, 28, 9, 8, 7, 35, 5};
path[27][6]= {27, 28, 9, 8, 7, 6};
path[27][7]= {27, 28, 9, 8, 7};
path[27][8]= {27, 28, 9, 8};
path[27][9]= {27, 28, 9};
path[27][10]= {27, 10};
path[27][11]= {27, 26, 11};
path[27][12]= {27, 26, 12};
path[27][13]= {27, 26, 12, 13};
path[27][14]= {27, 26, 12, 13, 14};
path[27][15]= {27, 28, 25, 24, 22, 21, 15};
path[27][16]= {27, 28, 9, 8, 7, 6, 17, 1, 0, 16};
path[27][17]= {27, 28, 9, 8, 7, 6, 17};
path[27][18]= {27, 28, 25, 24, 23, 20, 19, 18};
path[27][19]= {27, 28, 25, 24, 23, 20, 19};
path[27][20]= {27, 28, 25, 24, 23, 20};
path[27][21]= {27, 28, 25, 24, 22, 21};
path[27][22]= {27, 28, 25, 24, 22};
path[27][23]= {27, 28, 25, 24, 23};
path[27][24]= {27, 28, 25, 24};
path[27][25]= {27, 28, 25};
path[27][26]= {27, 26};
path[27][28]= {27, 28};
path[27][29]= {27, 28, 9, 8, 29};
path[27][30]= {27, 28, 9, 8, 29, 30};
path[27][31]= {27, 28, 9, 8, 29, 30, 31};
path[27][32]= {27, 28, 9, 8, 29, 30, 31, 32};
path[27][33]= {27, 28, 9, 8, 29, 30, 31, 32, 33};
path[27][34]= {27, 28, 9, 8, 7, 35, 34};
path[27][35]= {27, 28, 9, 8, 7, 35};
path[28][0]= {28, 9, 8, 7, 6, 17, 1, 0};
path[28][1]= {28, 9, 8, 7, 6, 17, 1};
path[28][2]= {28, 25, 24, 23, 20, 19, 18, 2};
path[28][3]= {28, 9, 8, 29, 30, 31, 32, 33, 3};
path[28][4]= {28, 9, 8, 7, 35, 34, 4};
path[28][5]= {28, 9, 8, 7, 35, 5};
path[28][6]= {28, 9, 8, 7, 6};
path[28][7]= {28, 9, 8, 7};
path[28][8]= {28, 9, 8};
path[28][9]= {28, 9};
path[28][10]= {28, 9, 10};
path[28][11]= {28, 27, 26, 11};
path[28][12]= {28, 27, 26, 12};
path[28][13]= {28, 25, 13};
path[28][14]= {28, 25, 13, 14};
path[28][15]= {28, 25, 24, 22, 21, 15};
path[28][16]= {28, 9, 8, 7, 6, 17, 1, 0, 16};
path[28][17]= {28, 9, 8, 7, 6, 17};
path[28][18]= {28, 25, 24, 23, 20, 19, 18};
path[28][19]= {28, 25, 24, 23, 20, 19};
path[28][20]= {28, 25, 24, 23, 20};
path[28][21]= {28, 25, 24, 22, 21};
path[28][22]= {28, 25, 24, 22};
path[28][23]= {28, 25, 24, 23};
path[28][24]= {28, 25, 24};
path[28][25]= {28, 25};
path[28][26]= {28, 27, 26};
path[28][27]= {28, 27};
path[28][29]= {28, 9, 8, 29};
path[28][30]= {28, 9, 8, 29, 30};
path[28][31]= {28, 9, 8, 29, 30, 31};
path[28][32]= {28, 9, 8, 29, 30, 31, 32};
path[28][33]= {28, 9, 8, 29, 30, 31, 32, 33};
path[28][34]= {28, 9, 8, 7, 35, 34};
path[28][35]= {28, 9, 8, 7, 35};
path[29][0]= {29, 35, 7, 6, 17, 1, 0};
path[29][1]= {29, 35, 7, 6, 17, 1};
path[29][2]= {29, 30, 31, 32, 33, 3, 2};
path[29][3]= {29, 30, 31, 32, 33, 3};
path[29][4]= {29, 35, 34, 4};
path[29][5]= {29, 35, 5};
path[29][6]= {29, 35, 7, 6};
path[29][7]= {29, 35, 7};
path[29][8]= {29, 8};
path[29][9]= {29, 8, 9};
path[29][10]= {29, 8, 9, 10};
path[29][11]= {29, 8, 9, 28, 27, 26, 11};
path[29][12]= {29, 24, 25, 13, 12};
path[29][13]= {29, 24, 25, 13};
path[29][14]= {29, 30, 31, 20, 21, 15, 14};
path[29][15]= {29, 30, 31, 20, 21, 15};
path[29][16]= {29, 35, 7, 6, 17, 1, 0, 16};
path[29][17]= {29, 35, 7, 6, 17};
path[29][18]= {29, 30, 31, 32, 33, 18};
path[29][19]= {29, 30, 31, 32, 19};
path[29][20]= {29, 30, 31, 20};
path[29][21]= {29, 30, 31, 20, 21};
path[29][22]= {29, 30, 23, 22};
path[29][23]= {29, 30, 23};
path[29][24]= {29, 24};
path[29][25]= {29, 24, 25};
path[29][26]= {29, 8, 9, 28, 27, 26};
path[29][27]= {29, 8, 9, 28, 27};
path[29][28]= {29, 8, 9, 28};
path[29][30]= {29, 30};
path[29][31]= {29, 30, 31};
path[29][32]= {29, 30, 31, 32};
path[29][33]= {29, 30, 31, 32, 33};
path[29][34]= {29, 35, 34};
path[29][35]= {29, 35};
path[30][0]= {30, 31, 32, 33, 18, 17, 1, 0};
path[30][1]= {30, 31, 32, 33, 18, 17, 1};
path[30][2]= {30, 31, 32, 33, 3, 2};
path[30][3]= {30, 31, 32, 33, 3};
path[30][4]= {30, 31, 32, 34, 4};
path[30][5]= {30, 29, 35, 5};
path[30][6]= {30, 31, 32, 19, 6};
path[30][7]= {30, 29, 35, 7};
path[30][8]= {30, 29, 8};
path[30][9]= {30, 29, 8, 9};
path[30][10]= {30, 29, 8, 9, 10};
path[30][11]= {30, 29, 8, 9, 28, 27, 26, 11};
path[30][12]= {30, 23, 24, 25, 13, 12};
path[30][13]= {30, 23, 24, 25, 13};
path[30][14]= {30, 31, 20, 21, 15, 14};
path[30][15]= {30, 31, 20, 21, 15};
path[30][16]= {30, 31, 32, 33, 18, 17, 1, 0, 16};
path[30][17]= {30, 31, 32, 33, 18, 17};
path[30][18]= {30, 31, 32, 33, 18};
path[30][19]= {30, 31, 32, 19};
path[30][20]= {30, 31, 20};
path[30][21]= {30, 31, 20, 21};
path[30][22]= {30, 23, 22};
path[30][23]= {30, 23};
path[30][24]= {30, 23, 24};
path[30][25]= {30, 23, 24, 25};
path[30][26]= {30, 29, 8, 9, 28, 27, 26};
path[30][27]= {30, 29, 8, 9, 28, 27};
path[30][28]= {30, 29, 8, 9, 28};
path[30][29]= {30, 29};
path[30][31]= {30, 31};
path[30][32]= {30, 31, 32};
path[30][33]= {30, 31, 32, 33};
path[30][34]= {30, 31, 32, 34};
path[30][35]= {30, 29, 35};
path[31][0]= {31, 32, 33, 18, 17, 1, 0};
path[31][1]= {31, 32, 33, 18, 17, 1};
path[31][2]= {31, 32, 33, 3, 2};
path[31][3]= {31, 32, 33, 3};
path[31][4]= {31, 32, 34, 4};
path[31][5]= {31, 32, 34, 35, 5};
path[31][6]= {31, 32, 19, 6};
path[31][7]= {31, 32, 34, 35, 7};
path[31][8]= {31, 30, 29, 8};
path[31][9]= {31, 30, 29, 8, 9};
path[31][10]= {31, 30, 29, 8, 9, 10};
path[31][11]= {31, 30, 29, 8, 9, 28, 27, 26, 11};
path[31][12]= {31, 30, 23, 24, 25, 13, 12};
path[31][13]= {31, 30, 23, 24, 25, 13};
path[31][14]= {31, 20, 21, 15, 14};
path[31][15]= {31, 20, 21, 15};
path[31][16]= {31, 32, 33, 18, 17, 1, 0, 16};
path[31][17]= {31, 32, 33, 18, 17};
path[31][18]= {31, 32, 33, 18};
path[31][19]= {31, 32, 19};
path[31][20]= {31, 20};
path[31][21]= {31, 20, 21};
path[31][22]= {31, 30, 23, 22};
path[31][23]= {31, 30, 23};
path[31][24]= {31, 30, 23, 24};
path[31][25]= {31, 30, 23, 24, 25};
path[31][26]= {31, 30, 29, 8, 9, 28, 27, 26};
path[31][27]= {31, 30, 29, 8, 9, 28, 27};
path[31][28]= {31, 30, 29, 8, 9, 28};
path[31][29]= {31, 30, 29};
path[31][30]= {31, 30};
path[31][32]= {31, 32};
path[31][33]= {31, 32, 33};
path[31][34]= {31, 32, 34};
path[31][35]= {31, 32, 34, 35};
path[32][0]= {32, 33, 18, 17, 1, 0};
path[32][1]= {32, 33, 18, 17, 1};
path[32][2]= {32, 33, 3, 2};
path[32][3]= {32, 33, 3};
path[32][4]= {32, 34, 4};
path[32][5]= {32, 34, 35, 5};
path[32][6]= {32, 19, 6};
path[32][7]= {32, 34, 35, 7};
path[32][8]= {32, 31, 30, 29, 8};
path[32][9]= {32, 31, 30, 29, 8, 9};
path[32][10]= {32, 31, 30, 29, 8, 9, 10};
path[32][11]= {32, 31, 30, 29, 8, 9, 28, 27, 26, 11};
path[32][12]= {32, 31, 30, 23, 24, 25, 13, 12};
path[32][13]= {32, 31, 30, 23, 24, 25, 13};
path[32][14]= {32, 31, 20, 21, 15, 14};
path[32][15]= {32, 31, 20, 21, 15};
path[32][16]= {32, 33, 18, 17, 1, 0, 16};
path[32][17]= {32, 33, 18, 17};
path[32][18]= {32, 33, 18};
path[32][19]= {32, 19};
path[32][20]= {32, 31, 20};
path[32][21]= {32, 31, 20, 21};
path[32][22]= {32, 31, 30, 23, 22};
path[32][23]= {32, 31, 30, 23};
path[32][24]= {32, 31, 30, 23, 24};
path[32][25]= {32, 31, 30, 23, 24, 25};
path[32][26]= {32, 31, 30, 29, 8, 9, 28, 27, 26};
path[32][27]= {32, 31, 30, 29, 8, 9, 28, 27};
path[32][28]= {32, 31, 30, 29, 8, 9, 28};
path[32][29]= {32, 31, 30, 29};
path[32][30]= {32, 31, 30};
path[32][31]= {32, 31};
path[32][33]= {32, 33};
path[32][34]= {32, 34};
path[32][35]= {32, 34, 35};
path[33][0]= {33, 18, 17, 1, 0};
path[33][1]= {33, 18, 17, 1};
path[33][2]= {33, 3, 2};
path[33][3]= {33, 3};
path[33][4]= {33, 3, 4};
path[33][5]= {33, 3, 4, 5};
path[33][6]= {33, 32, 19, 6};
path[33][7]= {33, 32, 34, 35, 7};
path[33][8]= {33, 32, 31, 30, 29, 8};
path[33][9]= {33, 32, 31, 30, 29, 8, 9};
path[33][10]= {33, 32, 31, 30, 29, 8, 9, 10};
path[33][11]= {33, 32, 31, 30, 29, 8, 9, 28, 27, 26, 11};
path[33][12]= {33, 32, 31, 30, 23, 24, 25, 13, 12};
path[33][13]= {33, 32, 31, 30, 23, 24, 25, 13};
path[33][14]= {33, 32, 31, 20, 21, 15, 14};
path[33][15]= {33, 32, 31, 20, 21, 15};
path[33][16]= {33, 18, 17, 1, 0, 16};
path[33][17]= {33, 18, 17};
path[33][18]= {33, 18};
path[33][19]= {33, 32, 19};
path[33][20]= {33, 32, 31, 20};
path[33][21]= {33, 32, 31, 20, 21};
path[33][22]= {33, 32, 31, 30, 23, 22};
path[33][23]= {33, 32, 31, 30, 23};
path[33][24]= {33, 32, 31, 30, 23, 24};
path[33][25]= {33, 32, 31, 30, 23, 24, 25};
path[33][26]= {33, 32, 31, 30, 29, 8, 9, 28, 27, 26};
path[33][27]= {33, 32, 31, 30, 29, 8, 9, 28, 27};
path[33][28]= {33, 32, 31, 30, 29, 8, 9, 28};
path[33][29]= {33, 32, 31, 30, 29};
path[33][30]= {33, 32, 31, 30};
path[33][31]= {33, 32, 31};
path[33][32]= {33, 32};
path[33][34]= {33, 32, 34};
path[33][35]= {33, 32, 34, 35};
path[34][0]= {34, 35, 7, 6, 17, 1, 0};
path[34][1]= {34, 35, 7, 6, 17, 1};
path[34][2]= {34, 4, 3, 2};
path[34][3]= {34, 4, 3};
path[34][4]= {34, 4};
path[34][5]= {34, 35, 5};
path[34][6]= {34, 35, 7, 6};
path[34][7]= {34, 35, 7};
path[34][8]= {34, 35, 7, 8};
path[34][9]= {34, 35, 7, 8, 9};
path[34][10]= {34, 35, 7, 8, 9, 10};
path[34][11]= {34, 35, 7, 8, 9, 28, 27, 26, 11};
path[34][12]= {34, 35, 7, 8, 9, 28, 27, 26, 12};
path[34][13]= {34, 35, 29, 24, 25, 13};
path[34][14]= {34, 32, 31, 20, 21, 15, 14};
path[34][15]= {34, 32, 31, 20, 21, 15};
path[34][16]= {34, 35, 7, 6, 17, 1, 0, 16};
path[34][17]= {34, 35, 7, 6, 17};
path[34][18]= {34, 32, 33, 18};
path[34][19]= {34, 32, 19};
path[34][20]= {34, 32, 31, 20};
path[34][21]= {34, 32, 31, 20, 21};
path[34][22]= {34, 32, 31, 30, 23, 22};
path[34][23]= {34, 32, 31, 30, 23};
path[34][24]= {34, 35, 29, 24};
path[34][25]= {34, 35, 29, 24, 25};
path[34][26]= {34, 35, 7, 8, 9, 28, 27, 26};
path[34][27]= {34, 35, 7, 8, 9, 28, 27};
path[34][28]= {34, 35, 7, 8, 9, 28};
path[34][29]= {34, 35, 29};
path[34][30]= {34, 32, 31, 30};
path[34][31]= {34, 32, 31};
path[34][32]= {34, 32};
path[34][33]= {34, 32, 33};
path[34][35]= {34, 35};
path[35][0]= {35, 7, 6, 17, 1, 0};
path[35][1]= {35, 7, 6, 17, 1};
path[35][2]= {35, 34, 4, 3, 2};
path[35][3]= {35, 34, 4, 3};
path[35][4]= {35, 34, 4};
path[35][5]= {35, 5};
path[35][6]= {35, 7, 6};
path[35][7]= {35, 7};
path[35][8]= {35, 7, 8};
path[35][9]= {35, 7, 8, 9};
path[35][10]= {35, 7, 8, 9, 10};
path[35][11]= {35, 7, 8, 9, 28, 27, 26, 11};
path[35][12]= {35, 7, 8, 9, 28, 27, 26, 12};
path[35][13]= {35, 29, 24, 25, 13};
path[35][14]= {35, 7, 6, 15, 14};
path[35][15]= {35, 7, 6, 15};
path[35][16]= {35, 7, 6, 17, 1, 0, 16};
path[35][17]= {35, 7, 6, 17};
path[35][18]= {35, 34, 32, 33, 18};
path[35][19]= {35, 34, 32, 19};
path[35][20]= {35, 34, 32, 31, 20};
path[35][21]= {35, 7, 6, 15, 21};
path[35][22]= {35, 7, 6, 15, 21, 22};
path[35][23]= {35, 29, 30, 23};
path[35][24]= {35, 29, 24};
path[35][25]= {35, 29, 24, 25};
path[35][26]= {35, 7, 8, 9, 28, 27, 26};
path[35][27]= {35, 7, 8, 9, 28, 27};
path[35][28]= {35, 7, 8, 9, 28};
path[35][29]= {35, 29};
path[35][30]= {35, 29, 30};
path[35][31]= {35, 34, 32, 31};
path[35][32]= {35, 34, 32};
path[35][33]= {35, 34, 32, 33};
path[35][34]= {35, 34};


        int k = 0;
        for(char x = 'a'; x <= 'z'; x++)
            alpha.put(k++,x);
        k = 0;
        for(int i = 0; i <= 1; i++)
        {
            for(int j = 0; j < 26; j++)
            {
                //assign values to the strings {aa,1},{ab,2}...
                char[] ch = {alpha.get(i),alpha.get(j)};
                String s = new String(ch);
                myMap.put(s,k++);
            }
        }
    }
}
